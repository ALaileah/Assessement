
services:
  app:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: crudapi:v2
    container_name: laravel_app
    restart: unless-stopped
    # command: ["php-fpm"]
    depends_on:
      - db
      # db:
      #   condition: service_healthy
    networks:
      - laravel
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
  auth:
    build:
      context: ./Authentication
      dockerfile: Dockerfile
    image: auth:v1
    container_name: dotnet_auth
    restart: unless-stopped
    networks:
      - laravel
    expose:
      - "8080"
    environment:
      ConnectionStrings__DefaultConnection: ${DB_CONNECTION_STRING}
  db:
    image: mysql:9.3.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    expose:
      - "3306"
    networks:
      - laravel
    # healthcheck:
    #   test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    #   interval: 1m30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 30s
  frontend:
    build:
      context: ./view
      dockerfile: Dockerfile
    image: crudfrontend:v2
    container_name: react_frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - app
    volumes:
      - .\view\nginx.conf:/etc/nginx/conf.d/default.conf 
    networks:
      - laravel

volumes:
  dbdata:

networks:
  laravel:
    driver: bridge
